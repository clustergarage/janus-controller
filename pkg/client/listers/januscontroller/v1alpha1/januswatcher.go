// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "clustergarage.io/janus-controller/pkg/apis/januscontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JanusWatcherLister helps list JanusWatchers.
type JanusWatcherLister interface {
	// List lists all JanusWatchers in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.JanusWatcher, err error)
	// JanusWatchers returns an object that can list and get JanusWatchers.
	JanusWatchers(namespace string) JanusWatcherNamespaceLister
	JanusWatcherListerExpansion
}

// janusWatcherLister implements the JanusWatcherLister interface.
type janusWatcherLister struct {
	indexer cache.Indexer
}

// NewJanusWatcherLister returns a new JanusWatcherLister.
func NewJanusWatcherLister(indexer cache.Indexer) JanusWatcherLister {
	return &janusWatcherLister{indexer: indexer}
}

// List lists all JanusWatchers in the indexer.
func (s *janusWatcherLister) List(selector labels.Selector) (ret []*v1alpha1.JanusWatcher, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JanusWatcher))
	})
	return ret, err
}

// JanusWatchers returns an object that can list and get JanusWatchers.
func (s *janusWatcherLister) JanusWatchers(namespace string) JanusWatcherNamespaceLister {
	return janusWatcherNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JanusWatcherNamespaceLister helps list and get JanusWatchers.
type JanusWatcherNamespaceLister interface {
	// List lists all JanusWatchers in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.JanusWatcher, err error)
	// Get retrieves the JanusWatcher from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.JanusWatcher, error)
	JanusWatcherNamespaceListerExpansion
}

// janusWatcherNamespaceLister implements the JanusWatcherNamespaceLister
// interface.
type janusWatcherNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JanusWatchers in the indexer for a given namespace.
func (s janusWatcherNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.JanusWatcher, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.JanusWatcher))
	})
	return ret, err
}

// Get retrieves the JanusWatcher from the indexer for a given namespace and name.
func (s janusWatcherNamespaceLister) Get(name string) (*v1alpha1.JanusWatcher, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("januswatcher"), name)
	}
	return obj.(*v1alpha1.JanusWatcher), nil
}
